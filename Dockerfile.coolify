# Multi-stage build para Coolify
FROM node:18-alpine AS base

WORKDIR /app

# Install dependencies needed for building
RUN apk add --no-cache python3 make g++ curl

# Copy package files
COPY package*.json ./

# Install all dependencies
RUN npm ci

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS production

WORKDIR /app

# Install curl for healthcheck
RUN apk add --no-cache curl

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application from builder stage
COPY --from=base /app/dist ./dist
COPY --from=base /app/client/dist ./client/dist

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 && \
    chown -R nodejs:nodejs /app

USER nodejs

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:5000/api/services || exit 1

# Copy scripts
COPY --from=base /app/start-production.sh ./
COPY --from=base /app/init-db.js ./

# Make script executable
USER root
RUN chmod +x start-production.sh
USER nodejs

CMD ["./start-production.sh"]